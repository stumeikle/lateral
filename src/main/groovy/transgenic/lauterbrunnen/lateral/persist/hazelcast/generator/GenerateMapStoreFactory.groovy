package transgenic.lauterbrunnen.lateral.persist.hazelcast.generator

import java.lang.reflect.Field

/**
 * Created by stumeikle on 06/11/16.
 */
class GenerateMapStoreFactory extends GeneratePersister {

    public void generate(List<Class> protoclasses, Map<String, Field> idFields) {

        def fn = basePath + "/" + cachePackage.replaceAll("\\.", "/") + "/HCMapStoreFactoryImpl.java";
        //or connector or what
        println "Writing " + fn;
        def output = new File(fn);

        output << "package " + cachePackage + ";" << System.lineSeparator()
        output << "" << System.lineSeparator();
        output << "//DO NOT MODIFY, this class was generated by xxx " << System.lineSeparator();
        output << ""<< System.lineSeparator();

        output << "import " << implPackage << ".*;" << System.lineSeparator();
        output << "import com.hazelcast.core.MapLoader;" << System.lineSeparator() +
                "import transgenic.lauterbrunnen.lateral.cache.hazelcast.HCMapStoreFactory;" << System.lineSeparator() +
                "import transgenic.lauterbrunnen.lateral.di.DefaultImpl;"<< System.lineSeparator()

        output << "import java.util.Properties;" << System.lineSeparator()
        output << System.lineSeparator();

        output << "@DefaultImpl" << System.lineSeparator() +
                "public class HCMapStoreFactoryImpl implements HCMapStoreFactory{" << System.lineSeparator() +
                "" << System.lineSeparator() +
                "    @Override" << System.lineSeparator() +
                "    public MapLoader<Object, Object> newMapStore(String s, Properties properties) {" << System.lineSeparator()

        for (Class proto: protoclasses) {
            output << "        if (\"" << proto.getSimpleName() << "\".equals(s)) { return new " << proto.getSimpleName() << "MapStore(); }" << System.lineSeparator()
        }

        output << "        return null;" << System.lineSeparator()
        output << "    }"<< System.lineSeparator()
        output << "}" << System.lineSeparator()
    }
}
