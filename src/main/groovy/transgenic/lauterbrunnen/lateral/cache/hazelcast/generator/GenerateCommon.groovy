package transgenic.lauterbrunnen.lateral.cache.hazelcast.generator

/**
 * Created by stumeikle on 05/06/16.
 */
class GenerateCommon {

    private String outputPackage;
    private String basePath;

    public void setBasePath(String basePath) {
        this.basePath = basePath;
    }

    public void setOutputPackage(String outputPackage) {
        this.outputPackage = outputPackage;
    }

    public void generate(List<Class> repos) {
        def fn = basePath + "/" + outputPackage.replaceAll("\\.","/") + "/HCCommonRepositoryImpl.java";
        println "Writing " + fn;
        def output = new File(fn);

        output << "package " + outputPackage + ";" << System.lineSeparator()
        output << "" << System.lineSeparator();
        output << "//DO NOT MODIFY, this class was generated by xxx " << System.lineSeparator();
        output << ""<< System.lineSeparator();

        output << "import transgenic.lauterbrunnen.lateral.domain.CRUDRepository;" << System.lineSeparator()
        output << "import transgenic.lauterbrunnen.lateral.domain.EntityImpl;" << System.lineSeparator()
        output << "import transgenic.lauterbrunnen.lateral.domain.Factory;" << System.lineSeparator()
        output << "import java.util.Collection;" << System.lineSeparator()
        output << ""<< System.lineSeparator();
        
        output << "public class HCCommonRepositoryImpl {" << System.lineSeparator() +
                "" << System.lineSeparator() +
                "" << System.lineSeparator() +
                "    public void persistAll(Collection<EntityImpl> persistCollection) {" << System.lineSeparator() +
                "        //Nothing clever for now" << System.lineSeparator() +
                "        //Entities here could be a variety of types" << System.lineSeparator() +
                "        for(EntityImpl impl: persistCollection) {" << System.lineSeparator() +
                "            CRUDRepository repo = Factory.getRepositoryForClass(impl.getClass());" << System.lineSeparator() +
                "            repo.persist(impl);" << System.lineSeparator() +
                "        }" << System.lineSeparator() +
                "    }" << System.lineSeparator() +
                "" << System.lineSeparator() +
                "    public void updateAll(Collection<EntityImpl> updateCollection) {" << System.lineSeparator() +
                "        for(EntityImpl impl: updateCollection) {" << System.lineSeparator() +
                "            CRUDRepository repo = Factory.getRepositoryForClass(impl.getClass());" << System.lineSeparator() +
                "            repo.update(impl);" << System.lineSeparator() +
                "        }" << System.lineSeparator() +
                "    }" << System.lineSeparator() +
                "}"<< System.lineSeparator();
    }
}
