domain.proto.package=${package}.proto
domain.generated.package=${package}.generated
cache.hazelcast.generated.package=${package}.cache.hazelcast.generated
cache.zero.generated.package=${package}.cache.zero.generated
lateral.di.context=microservice

# Properties for the generation of JPA entities ---------------------------
entity.generated.package=${package}.entity.generated

#this suffix allows conversion of UniqueId to byte[]
entity.swap.type.transgenic.lauterbrunnen.lateral.domain.UniqueId=byte[]
entity.type.converter.transgenic.lauterbrunnen.lateral.domain.UniqueId=UniqueId::convertToByteArray
entity.type.reverse.converter.transgenic.lauterbrunnen.lateral.domain.UniqueId=UniqueId::createFromByteArray

#convert java.net.URL objects to string when persisting
#Example:
#entity.swap.type.java.net.URL=String
#entity.type.converter.java.net.URL=transgenic.lauterbrunnen.lateral.example.multidomain.server.URLConverter::convertToString
#entity.type.reverse.converter.java.net.URL=transgenic.lauterbrunnen.lateral.example.multidomain.server.URLConverter::createFromString

#this next required for derby database
entity.column.definition.transgenic.lauterbrunnen.lateral.domain.UniqueId=VARCHAR(16) FOR BIT DATA
entity.column.definition.byte\[\]=VARCHAR(16) FOR BIT DATA

# Properties for the generation hazelcast event listeners / mapstore ---------------------------
persist.generated.persistence.unit=microservice
persist.generated.package=${package}.persist
persist.hazelcast.generated.package=${package}.persist.hazelcast.generated
persist.zerocache.generated.package=${package}.persist.zerocache.generated

#Parameters for the REST API generation
rest.generated.package=${package}.rest.generated
rest.version=1.0
rest.path=/api/v1
rest.support.json=true
rest.support.xml=true

#Other example parameters:
#rest.pojo.vehicle.plural=vehicles
#rest.pojo.vehicle.version=2.0

